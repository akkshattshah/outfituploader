rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Outfits collection
    match /outfits/{outfitId} {
      // Anyone can read outfits (for rating)
      allow read: if true;
      // Only authenticated users can create outfits
      allow create: if request.auth != null;
      // Only the outfit owner can update their own outfits, OR allow rating updates (totalRatings, averageRating)
      allow update: if request.auth != null && request.auth.uid == resource.data.userId || 
                   (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalRatings', 'averageRating']));
      // Only the outfit owner can delete their own outfits
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Ratings collection
    match /ratings/{ratingId} {
      // Anyone can read ratings
      allow read: if true;
      // Anyone can create ratings (anonymous rating allowed)
      allow create: if true;
      // No updates or deletes for ratings (to maintain integrity)
      allow update, delete: if false;
    }
    
    // Users collection - Allow creation during signup
    match /users/{userId} {
      // Users can read their own data
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;
      // Allow creation during signup (user is authenticated at this point)
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      // Users can update their own data
      allow update: if request.auth != null && request.auth.uid == resource.data.uid;
      // Users can delete their own data
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
  }
}
